#!/bin/sh

# e.g. FFF_PLUS_VERSION
[ -e '/etc/variables_fff+' ] && . '/etc/variables_fff+'

[ -e '/etc/profile' ] && {
	command . '/etc/profile' >/dev/null
	echo "export PATH=$PATH"
}

# http://wiki.openwrt.org/doc/uci/system#time.zones
TIMEZONE_BERLIN="CET-1CEST,M3.5.0,M10.5.0/3"
TIMEZONE="$( uci -q get system.@system[0].timezone )"
TIMEZONE="${TIMEZONE:-$TIMEZONE_BERLIN}"

HOSTNAME="$( uci -q get system.@system[0].hostname )"
HOSTNAME="${HOSTNAME:-$( cat '/etc/hostname' )}"
HOSTNAME="${HOSTNAME:-$( hostname 2>/dev/null || echo 'anonymous' )}"

MONITORING_SERVERIP="$( uci -q get system.@monitoring[0].serverip )"
MONITORING_SERVERIP="${MONITORING_SERVERIP:-84.38.67.43}"

if   [ -e '/etc/openwrt_release' ]; then
	. '/etc/openwrt_release'
	OPENWRT_REV="${DISTRIB_REVISION//[^0-9]/}"
elif [ -e '/etc/banner' ]; then					# FIXME for 'dash'
	set -- $( grep ' r[1-9][0-9][0-9]' '/etc/banner' )	# CHAOS CALMER (Bleeding Edge, r46435)
	OPENWRT_REV="${5//[^0-9]/}"				# 'r46435)' -> 46435
fi
# '0' is a good/simple test for 'is vpn server'
OPENWRT_REV="${OPENWRT_REV:-0}"

OPKG="$( which /bin/[o,i]pkg )"
OPKG="${OPKG:-'_software opkg_raminstaller'}"

# each node has it's own "neary uniq" DHCP-range
# which must be valid across the whole network,
# e.g. 192.168.8.0/16 on node 8
NODENUMBER_ROAMING="$( uci get system.@profile[0].nodenumber )"
while [ ${NODENUMBER_ROAMING:=2} -gt 254 ]; do {
	NODENUMBER_ROAMING=$(( NODENUMBER_ROAMING - 254 ))	# e.g. node 255 -> 1
} done

read -r HARDWARE 2>/dev/null <'/etc/HARDWARE' || {
	# model name  : Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz
	set -- $( grep ^'model name' '/proc/cpuinfo' | head -n1 )
	shift 3
	HARDWARE="$*"
}

PERMDIR='/www/keep'	# for permanent (kept when rebooting)
mkdir -p "$PERMDIR" || {
	PERMDIR="$TMPDIR/permanent_fake"
	mkdir -p "$PERMDIR"
	logger -s -- "$0: fallback \$PERMDIR to '$PERMDIR'"
}

	cat <<EOF

# from $0.user
export TZ='$TIMEZONE'
TMPDIR=$TMPDIR
NODENUMBER_ROAMING=$NODENUMBER_ROAMING
NODENUMBER=\${NODENUMBER-$( uci get system.@profile[0].nodenumber )}
CONFIG_PROFILE=\${CONFIG_PROFILE-$( uci get system.@profile[0].name )}
HARDWARE='$HARDWARE'
HOSTNAME='$HOSTNAME'
OPKG=$OPKG
MONITORING_SERVERIP=$MONITORING_SERVERIP
export HOME=$( grep ^${USER:-root}: /etc/passwd | cut -d: -f6 )
FFF_PLUS_VERSION=$FFF_PLUS_VERSION;OPENWRT_REV=$OPENWRT_REV
PERMDIR=$PERMDIR

isnumber(){ test 2>/dev/null \${1-a} -eq \$*;}
bool_true(){ case \$(uci -q get \$1) in 1|on|true|yes|en*);;*)false;;esac;}
EOF
# isnumber: http://stackoverflow.com/questions/806906/how-do-i-test-if-a-variable-is-a-number-in-bash

read -r _ MEMTOTAL _ <'/proc/meminfo'
[ $MEMTOTAL -gt 16384 ] || echo 'LOWMEM=true'

test_iptables()
{
	# direct call can fail if PATH not set yet
	if [ -e '/usr/sbin/iptables' ]; then
		/usr/sbin/iptables --help | fgrep -q -- '--wait'
	elif [ -e '/sbin/iptables' ]; then
		/sbin/iptables --help | fgrep -q -- '--wait'
	else
		false
	fi
}

if test_iptables; then
	echo "IPT='iptables --wait'"
else
	echo 'IPT=iptables'
fi

echo "TC=$( which tc || echo 'false' )"		# TODO: wrapper function

if [ -e "$TMPDIR/NETPARAM" ]; then
	FILE_NETPARAM="$TMPDIR/NETPARAM"
else
	FILE_NETPARAM="$PERMDIR/NETPARAM"
fi

if [ -e "$FILE_NETPARAM" ]; then		# FIXME! better concept needed
	while read -r LINE; do {
		case "$LINE" in
			*"="*)
				printf '%s' "$LINE;"
			;;
		esac
	} done <"$FILE_NETPARAM"
	echo "BATADR=$( uci -q get network.mybridge.ipaddr )"

	. "$FILE_NETPARAM"
	printf '%s' "$WIFIDEV" >"$TMPDIR/WIFIDEV"	# is a hack for fast seeking our dev/ip
	printf '%s' "$WIFIADR" >"$TMPDIR/WIFIADR"
else
        logger -s -- "$0: [OK] could not use '$FILE_NETPARAM' - maybe later"
fi

[ $OPENWRT_REV -eq 0 -a -e '/etc/profile.d/kalua.sh' ] && cat <<EOF
case "\$-" in
	*i*)
		. /etc/profile.d/kalua.sh
	;;
esac
EOF
